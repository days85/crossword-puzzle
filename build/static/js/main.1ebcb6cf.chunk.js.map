{"version":3,"sources":["components/BoxComponent.js","components/BoardHeaderComponent.js","components/BoardFooterComponent.js","components/BoardComponent.js","components/ClueComponent.js","components/ClueListComponent.js","components/ClueListsComponent.js","helpers/CluesHelper.js","components/GameComponent.js","helpers/BoxesHelper.js","index.js"],"names":["Box","styled","div","isFirstColumn","isLastRow","hasLetter","Input","input","hasNumber","Number","span","BoxComponent","props","state","highlight","isHighlighted","isInFocus","handleFocus","bind","nextProps","this","setState","textInput","focus","event","setActiveClue","boxClues","boxesToHighlight","forEach","clue","concat","allClues","find","element","id","boxes","setActiveClueBoxes","setBoxInFocus","target","solution","number","type","maxLength","className","onFocus","ref","React","Component","BoardHeader","BoardHeaderWrapper","BoardHeaderNumber","BoardHeaderDirection","BoardHeaderText","BoardHeaderComponent","activeClue","map","clueID","active","clues","direction","text","BoardFooter","BoardFooterTitle","BoardFooterCreator","BoardFooterComponent","title","creator","Board","BoardBody","width","height","BoardComponent","meta","size","grid","box","x","y","parseInt","highlightedBoxes","indexOf","boxInFocus","Clue","li","ClueButton","button","ClueNumber","ClueText","ClueComponent","isActive","createRef","handleClick","current","scrollIntoView","behavior","block","push","clueBoxes","onClick","ClueList","ClueListLabel","h2","ClueListWrapper","ol","ClueListComponent","filtered","filter","label","ClueLists","ClueListsComponent","organizeClues","organized","definitions","wordId","word","words","rangeX","getRange","rangeY","getBoxesFromRanges","divideBoxes","c","answer","entry","nums","range","split","low","high","Game","GameComponent","cells","cell","cellID","organizeBoxes","activeClueBoxes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ebcb6cf.chunk.js","sourcesContent":["import React from 'react';\nimport styled from \"styled-components\";\n\nconst Box = styled.div`\n  position: relative;\n  width: 50px;\n  height: 50px;\n  border: 1px solid black;\n  text-align: center;\n  ${({isFirstColumn}) => !isFirstColumn && `border-left: 0;`}\n  ${({isLastRow}) => !isLastRow && `border-bottom: 0;`}\n  ${({hasLetter}) => !hasLetter && `background: #333;`}\n`;\n\nconst Input = styled.input`\n  width: ${({hasNumber}) => hasNumber ? \"48px\" : \"49px\"};\n  height: 48px;\n  border: 0;\n  padding: 0;\n  font-size: 30px;\n  text-align: center;\n  text-transform: uppercase;\n`;\n\nconst Number = styled.span`\n  position: absolute;\n  top: 2px;\n  left: 2px;\n`;\n\n\nclass BoxComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      highlight: props.isHighlighted,\n      isInFocus: props.isInFocus,\n    }\n\n    this.handleFocus = this.handleFocus.bind(this);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    this.setState({\n      highlight: nextProps.isHighlighted,\n      isInFocus: nextProps.isInFocus,\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.state.isInFocus) {\n      this.textInput.focus();\n    }\n  }\n\n  handleFocus(event) {\n    this.props.setActiveClue(this.props.boxClues);\n\n    let boxesToHighlight = [];\n\n    this.props.boxClues.forEach((clue) => {\n      boxesToHighlight = boxesToHighlight.concat(this.props.allClues.find(element => element.id === clue).boxes)\n    });\n\n    this.props.setActiveClueBoxes(boxesToHighlight);\n    this.props.setBoxInFocus(event.target.id);\n  }\n\n  render() {\n    return (\n      <Box\n        id={this.props.id}\n        hasLetter={this.props.solution}\n        isFirstColumn={this.props.isFirstColumn}\n        isLastRow={this.props.isLastRow}\n      >\n        {\n          this.props.number &&\n          <Number>{this.props.number}</Number>\n        }\n        {\n          this.props.solution &&\n          <Input\n            type=\"text\"\n            maxLength=\"1\"\n            className={ `box-input ${this.state.highlight ? 'highlight' : ''}` }\n            hasNumber={!!this.props.number}\n            onFocus={this.handleFocus}\n            ref={(input) => {this.textInput = input}}\n          />\n        }\n      </Box>\n    );\n  }\n}\n\nexport default BoxComponent;\n\n","import React from 'react';\nimport styled from \"styled-components\";\n\nconst BoardHeader = styled.div`\n  display: flex;\n  height: 50px;\n  background: #5ef5f2;\n`;\nconst BoardHeaderWrapper = styled.div`\n  padding: 10px 20px;\n  flex: 50%;\n  border-right: 1px black solid;\n`;\nconst BoardHeaderNumber = styled.span`\n  font-size: 16px;\n  font-weight: 800;\n  padding-right: 5px;\n`;\nconst BoardHeaderDirection = styled.span`\n  font-weight: 800;\n  padding-right: 10px;\n`;\nconst BoardHeaderText = styled.span`\n  padding-left: 10px;\n`;\n\n\nfunction BoardHeaderComponent(props) {\n  return (\n    <BoardHeader>\n      {\n        props.activeClue.map((clueID) => {\n          const active = props.clues.find(clue => clue.id === clueID);\n          return (\n            <BoardHeaderWrapper key={'header' + clueID}>\n              <BoardHeaderNumber>{active.number}</BoardHeaderNumber>\n              <BoardHeaderDirection>{active.direction === 0 ? \"Across\" : \"Down\"}</BoardHeaderDirection>\n              {'|'}\n              <BoardHeaderText>{active.text}</BoardHeaderText>\n            </BoardHeaderWrapper>\n          );\n        })\n      }\n\n    </BoardHeader>\n  );\n}\n\nexport default BoardHeaderComponent;","import React from 'react';\nimport styled from \"styled-components\";\n\nconst BoardFooter = styled.div`\n  display: flex;\n  height: 50px;\n  padding: 5px 40px;\n  font-size: 20px;\n`;\nconst BoardFooterTitle = styled.span`\n  padding-right: 10px;\n`;\nconst BoardFooterCreator = styled.span`\n  padding-left: 10px;\n`;\n\n\nfunction BoardFooterComponent(props) {\n  return (\n    <BoardFooter>\n      <BoardFooterTitle>{props.title}</BoardFooterTitle>\n      {'|'}\n      <BoardFooterCreator>{props.creator}</BoardFooterCreator>\n    </BoardFooter>\n  );\n}\n\nexport default BoardFooterComponent;","import React from 'react';\nimport styled from \"styled-components\";\nimport BoxComponent from \"./BoxComponent\";\nimport BoardHeaderComponent from \"./BoardHeaderComponent\";\nimport BoardFooterComponent from \"./BoardFooterComponent\";\n\nconst Board = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 60%;\n`;\n\nconst BoardBody = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: ${({width}) => (width * 50) + \"px\"};\n  height: ${({height}) => (height * 50) + \"px\"};\n`;\n\nfunction BoardComponent(props) {\n  return (\n    <Board>\n      <BoardHeaderComponent activeClue={props.activeClue} clues={props.allClues}/>\n      <BoardBody\n        width={props.meta.size.width}\n        height={props.meta.size.height}\n      >\n        {\n          props.grid.map((box) => {\n            const {x, y, solution, number, clues} = box;\n            const id = x + \"-\" + y;\n            return <BoxComponent\n              key={id}\n              id={id}\n              solution={solution}\n              number={number}\n              isFirstColumn={parseInt(x) === 1}\n              isLastRow={parseInt(y) === parseInt(props.meta.size.height)}\n              isHighlighted={props.highlightedBoxes.indexOf(id) > -1}\n              isInFocus={props.boxInFocus === id}\n              boxClues={clues}\n              allClues={props.allClues}\n              setActiveClueBoxes={props.setActiveClueBoxes}\n              setActiveClue={props.setActiveClue}\n              setBoxInFocus={props.setBoxInFocus}\n            />\n          })\n        }\n      </BoardBody>\n      <BoardFooterComponent title={props.meta.title} creator={props.meta.creator}/>\n    </Board>\n    );\n}\n\nexport default BoardComponent;\n","import React from 'react';\nimport styled from \"styled-components\";\n\nconst Clue = styled.li`\n  display: flex;\n  position: relative;\n  margin-bottom: 10px;\n  height: 25px;\n`;\nconst ClueButton = styled.button`\n  display: flex;\n  width: 100%;\n  background: none;\n  border: 0;\n  color: inherit;\n  text-align: left;\n  cursor: pointer;\n  padding: 4px 10px;\n`;\nconst ClueNumber = styled.span`\n  display: inline-block;\n  font-weight: 800;\n  padding-right: 10px;\n`;\nconst ClueText = styled.span``;\n\n\nclass ClueComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: props.isActive,\n      ref: React.createRef(),\n    }\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    this.setState({\n      active: nextProps.isActive\n    });\n\n    if (nextProps.isActive) {\n      this.state.ref.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\"\n      });\n    }\n  }\n\n  handleClick() {\n    const activeClue = [];\n    activeClue.push(this.props.clueID);\n    this.props.setActiveClueBoxes(this.props.clueBoxes);\n    this.props.setActiveClue(activeClue);\n    this.props.setBoxInFocus(this.props.clueBoxes[0]);\n  }\n\n  render() {\n    return (\n      <Clue className={`clue ${this.state.active ? 'active' : ''}`} ref={this.state.ref}>\n        <ClueButton onClick={this.handleClick}>\n          <ClueNumber>{this.props.number}</ClueNumber>\n          <ClueText>{this.props.text}</ClueText>\n        </ClueButton>\n      </Clue>\n    );\n  }\n}\n\nexport default ClueComponent;","import React from 'react';\nimport styled from \"styled-components\";\nimport ClueComponent from \"./ClueComponent\";\n\nconst ClueList = styled.div`\n  height: 50%;\n  padding-bottom: 50px;\n`;\n\nconst ClueListLabel = styled.h2`\n  margin-top: 0;\n  margin-bottom: 5px;\n`;\n\nconst ClueListWrapper = styled.ol`\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n  height: 100%;\n  overflow: auto;\n`;\n\nfunction ClueListComponent(props) {\n\n  const filtered = props.clues.filter(clue => clue.direction === props.direction);\n\n  return (\n    <ClueList>\n      <ClueListLabel>{props.label}</ClueListLabel>\n      <ClueListWrapper>\n      {\n        filtered.map((clue) => {\n          return (\n            <ClueComponent\n              key={clue.id}\n              clueID={clue.id}\n              number={clue.number}\n              text={clue.text}\n              clueBoxes={clue.boxes}\n              setActiveClueBoxes={props.setActiveClueBoxes}\n              setActiveClue={props.setActiveClue}\n              setBoxInFocus={props.setBoxInFocus}\n              isActive={props.activeClue.indexOf(clue.id) > -1}\n            />\n          );\n        })\n      }\n      </ClueListWrapper>\n    </ClueList>\n  );\n}\n\nexport default ClueListComponent;","import React from 'react';\nimport styled from \"styled-components\";\nimport ClueListComponent from \"./ClueListComponent\";\n\nconst ClueLists = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 20px;\n  flex: 40%;\n`;\n\nfunction ClueListsComponent(props) {\n  return (\n    <ClueLists>\n      <ClueListComponent\n        clues={props.clues}\n        direction={0}\n        label=\"Across\"\n        setActiveClueBoxes={props.setActiveClueBoxes}\n        setActiveClue={props.setActiveClue}\n        setBoxInFocus={props.setBoxInFocus}\n        activeClue={props.activeClue}\n      />\n      <ClueListComponent\n        clues={props.clues}\n        direction={1}\n        label=\"Down\"\n        setActiveClueBoxes={props.setActiveClueBoxes}\n        setActiveClue={props.setActiveClue}\n        setBoxInFocus={props.setBoxInFocus}\n        activeClue={props.activeClue}\n      />\n    </ClueLists>\n  );\n}\n\nexport default ClueListsComponent;","import definitions from \"../crossword-puzzle.json\";\n\nexport function organizeClues() {\n  let organized = [];\n\n  definitions.clues.forEach((clue) => {\n\n    /** @param {{solution:string}} word **/\n    let word = searchClueWord(clue.word);\n    let boxes = divideBoxes(word);\n\n    let c = {\n      id: clue.direction + \"-\"+ clue.number,\n      text: clue.text,\n      answer: word.solution,\n      direction: clue.direction,\n      number: clue.number,\n      boxes: boxes,\n    };\n    organized.push(c);\n  });\n\n  return organized;\n}\n\nfunction searchClueWord(wordId) {\n  return definitions.words.find(word => word.id === wordId);\n}\n\nfunction divideBoxes(word) {\n  let x = word.x;\n  let y = word.y;\n  let rangeX = getRange(x);\n  let rangeY = getRange(y);\n\n  return getBoxesFromRanges(rangeX, rangeY);\n}\n\nfunction getRange(entry) {\n  let nums = [];\n\n  if (!~entry.indexOf('-')) {\n    nums.push(+entry);\n    return nums;\n  }\n\n  let range = entry.split('-');\n  let low = +range[0];\n  let high = +range[1];\n  while (low <= high) {\n    nums.push(low++);\n  }\n  return nums;\n}\n\nfunction getBoxesFromRanges(rangeX, rangeY) {\n  let boxes = [];\n  rangeX.forEach((x) => {\n    rangeY.forEach((y) => {\n      boxes.push(x + \"-\" + y)\n    });\n  });\n  return boxes;\n}","import React, {Component} from \"react\";\nimport definitions from \"../crossword-puzzle.json\";\nimport styled from \"styled-components\";\nimport BoardComponent from \"./BoardComponent\";\nimport ClueListsComponent from \"./ClueListsComponent\";\nimport {organizeClues} from \"../helpers/CluesHelper\";\nimport {organizeBoxes} from \"../helpers/BoxesHelper\";\n\nconst Game = styled.div`\n  display: flex;\n  margin: 0 auto;\n  height: 800px;\n`;\n\nclass GameComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    const clues = organizeClues();\n    const grid = organizeBoxes(clues);\n\n    this.state = {\n      grid: grid,\n      meta: definitions.meta,\n      clues: clues,\n      words: definitions.words,\n      activeClue: [clues[0].id],\n      activeClueBoxes: clues[0].boxes,\n      boxInFocus: clues[0].boxes[0]\n    };\n\n    this.setActiveClueBoxes = this.setActiveClueBoxes.bind(this);\n    this.setActiveClue = this.setActiveClue.bind(this);\n    this.setBoxInFocus = this.setBoxInFocus.bind(this);\n  }\n\n  setActiveClueBoxes(boxes) {\n    this.setState({\n      activeClueBoxes: boxes,\n    });\n  }\n\n  setActiveClue(clue) {\n    this.setState({\n      activeClue: clue,\n    });\n  }\n\n  setBoxInFocus(box) {\n    this.setState({\n      boxInFocus: box,\n    });\n  }\n\n  render() {\n    return (\n      <Game height={this.state.meta.size.height}>\n        <BoardComponent\n          grid={this.state.grid}\n          meta={this.state.meta}\n          highlightedBoxes={this.state.activeClueBoxes}\n          boxInFocus={this.state.boxInFocus}\n          allClues={this.state.clues}\n          activeClue={this.state.activeClue}\n          setActiveClueBoxes={this.setActiveClueBoxes}\n          setActiveClue={this.setActiveClue}\n          setBoxInFocus={this.setBoxInFocus}\n        />\n        <ClueListsComponent\n          clues={this.state.clues}\n          setActiveClueBoxes={this.setActiveClueBoxes}\n          setActiveClue={this.setActiveClue}\n          setBoxInFocus={this.setBoxInFocus}\n          activeClue={this.state.activeClue}\n        />\n      </Game>\n    );\n  }\n}\n\nexport default GameComponent;","import definitions from \"../crossword-puzzle.json\";\n\nexport function organizeBoxes(clues) {\n  let cells = definitions.cells;\n\n  cells.map((cell) => {\n    cell.clues = [];\n    const cellID = cell.x + \"-\" + cell.y\n\n    clues.forEach((clue) => {\n      if (clue.boxes.indexOf(cellID) > -1) {\n        cell.clues.push(clue.id);\n      }\n    });\n    return cell;\n  });\n  return cells;\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport GameComponent from \"./components/GameComponent\";\n\nReactDOM.render(\n  <GameComponent />,\n  document.getElementById('root'),\n);"],"sourceRoot":""}